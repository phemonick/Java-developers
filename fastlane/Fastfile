# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

before_all do
     ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"

      slack(message:"Java-developers, processing started")
       end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new Mock APK to converge-codelab-qa"
      lane :mock do |options|
        build(
          flavor: "Mock"
        )
        upload_to_slack()
      end

   lane :slackbuild do
     gradle(task: "assembleRelease")
     slack(message: "Build Successful!")
     upload_to_slack()
   end

   desc "Build a new APK"
      private_lane :build do |options|
        gradle(
         task: "clean assemble",
         flavor: options[:flavor],
         build_type: "Release"
        )
      end

  desc "Upload the APK to Slack channel"
  private_lane :upload_to_slack do |options|
    file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    file_name = file_path.gsub(/\/.*\//,"")
    sh "echo Uploading " + file_name + " to Slack"
    sh "curl https://slack.com/api/files.upload -F token=\"xoxp-424384161762-482269061270-481102714965-7d35f46921bbf0bb222d9e1037d5f04b\" -F channels=\"converge-codelab-qa\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
